package com.yellowbrossproductions.illageandspillage.init;


import com.yellowbrossproductions.illageandspillage.entities.*;
import com.yellowbrossproductions.illageandspillage.entities.projectile.*;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.EntityType.Builder;
import net.minecraft.world.entity.MobCategory;
import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

public class ModEntityTypes {
    public static DeferredRegister<EntityType<?>> ENTITY_TYPES = DeferredRegister.create(ForgeRegistries.ENTITY_TYPES, "illageandspillage");
    public static final RegistryObject<EntityType<IgniterEntity>> Igniter = ENTITY_TYPES.register("igniter", () -> Builder.of(IgniterEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "igniter")).toString()));
    public static final RegistryObject<EntityType<EngineerEntity>> Engineer = ENTITY_TYPES.register("engineer", () -> Builder.of(EngineerEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "engineer")).toString()));
    public static final RegistryObject<EntityType<ChagrinSentryEntity>> ChagrinSentry = ENTITY_TYPES.register("chagrin_sentry", () -> Builder.of(ChagrinSentryEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "chagrin_sentry")).toString()));
    public static final RegistryObject<EntityType<HinderEntity>> Hinder = ENTITY_TYPES.register("hinder", () -> Builder.of(HinderEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "hinder")).toString()));
    public static final RegistryObject<EntityType<FactoryEntity>> Factory = ENTITY_TYPES.register("factory", () -> Builder.of(FactoryEntity::new, MobCategory.MONSTER).sized(1.2F, 0.95F).build((new ResourceLocation("illageandspillage", "factory")).toString()));
    public static final RegistryObject<EntityType<BeeperEntity>> Beeper = ENTITY_TYPES.register("beeper", () -> Builder.of(BeeperEntity::new, MobCategory.MONSTER).sized(0.4F, 0.95F).build((new ResourceLocation("illageandspillage", "beeper")).toString()));
    public static final RegistryObject<EntityType<SniperEntity>> Sniper = ENTITY_TYPES.register("sniper", () -> Builder.of(SniperEntity::new, MobCategory.MONSTER).sized(0.5F, 0.95F).build((new ResourceLocation("illageandspillage", "sniper")).toString()));
    public static final RegistryObject<EntityType<PokerEntity>> Poker = ENTITY_TYPES.register("poker", () -> Builder.of(PokerEntity::new, MobCategory.MONSTER).sized(0.5F, 0.95F).build((new ResourceLocation("illageandspillage", "poker")).toString()));
    public static final RegistryObject<EntityType<MagispellerEntity>> Magispeller = ENTITY_TYPES.register("magispeller", () -> Builder.of(MagispellerEntity::new, MobCategory.MONSTER).sized(0.6F, 2.3F).build((new ResourceLocation("illageandspillage", "magispeller")).toString()));
    public static final RegistryObject<EntityType<FakeMagispellerEntity>> Faker = ENTITY_TYPES.register("faker", () -> Builder.of(FakeMagispellerEntity::new, MobCategory.MONSTER).sized(0.6F, 2.3F).build((new ResourceLocation("illageandspillage", "faker")).toString()));
    public static final RegistryObject<EntityType<DispenserEntity>> Dispenser = ENTITY_TYPES.register("dispenser", () -> Builder.of(DispenserEntity::new, MobCategory.MONSTER).sized(1.0F, 1.0F).build((new ResourceLocation("illageandspillage", "dispenser")).toString()));
    public static final RegistryObject<EntityType<IllashooterEntity>> Illashooter = ENTITY_TYPES.register("illashooter", () -> Builder.of(IllashooterEntity::new, MobCategory.MONSTER).sized(0.5F, 1.0F).build((new ResourceLocation("illageandspillage", "illashooter")).toString()));
    public static final RegistryObject<EntityType<CrashagerEntity>> Crashager = ENTITY_TYPES.register("crashager", () -> Builder.of(CrashagerEntity::new, MobCategory.MONSTER).sized(1.95F, 2.2F).fireImmune().build((new ResourceLocation("illageandspillage", "crashager")).toString()));
    public static final RegistryObject<EntityType<BossRandomizerEntity>> BossRandomizer = ENTITY_TYPES.register("boss_randomizer", () -> Builder.of(BossRandomizerEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "boss_randomizer")).toString()));
    public static final RegistryObject<EntityType<TwittollagerEntity>> Twittollager = ENTITY_TYPES.register("twittollager", () -> Builder.of(TwittollagerEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "twittollager")).toString()));
    public static final RegistryObject<EntityType<SpiritcallerEntity>> Spiritcaller = ENTITY_TYPES.register("spiritcaller", () -> Builder.of(SpiritcallerEntity::new, MobCategory.MONSTER).sized(0.6F, 2.4F).build((new ResourceLocation("illageandspillage", "spiritcaller")).toString()));
    public static final RegistryObject<EntityType<MobSpiritEntity>> MobSpirit = ENTITY_TYPES.register("mob_spirit", () -> Builder.of(MobSpiritEntity::new, MobCategory.MONSTER).sized(1.0F, 1.0F).fireImmune().build((new ResourceLocation("illageandspillage", "mob_spirit")).toString()));
    public static final RegistryObject<EntityType<IllagerSoulEntity>> IllagerSoul = ENTITY_TYPES.register("illager_soul", () -> Builder.of(IllagerSoulEntity::new, MobCategory.MONSTER).sized(1.0F, 1.0F).fireImmune().build((new ResourceLocation("illageandspillage", "illager_soul")).toString()));
    public static final RegistryObject<EntityType<ImpEntity>> Imp = ENTITY_TYPES.register("imp", () -> Builder.of(ImpEntity::new, MobCategory.CREATURE).sized(1.0F, 3.0F).fireImmune().build((new ResourceLocation("illageandspillage", "imp")).toString()));
    public static final RegistryObject<EntityType<SpiritHandEntity>> SpiritHand = ENTITY_TYPES.register("spirit_hand", () -> Builder.of(SpiritHandEntity::new, MobCategory.CREATURE).sized(1.5F, 1.5F).fireImmune().build((new ResourceLocation("illageandspillage", "spirit_hand")).toString()));
    public static final RegistryObject<EntityType<SoulBeamEntity>> SoulBeam = ENTITY_TYPES.register("soul_beam", () -> Builder.<SoulBeamEntity>of(SoulBeamEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build((new ResourceLocation("illageandspillage", "soul_beam")).toString()));
    public static final RegistryObject<EntityType<IgniterFireballEntity>> IgniterFireball = ENTITY_TYPES.register("igniter_fireball", () -> Builder.<IgniterFireballEntity>of(IgniterFireballEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build((new ResourceLocation("illageandspillage", "igniter_fireball")).toString()));
    public static final RegistryObject<EntityType<CrocofangEntity>> Crocofang = ENTITY_TYPES.register("crocofang", () -> Builder.of(CrocofangEntity::new, MobCategory.MONSTER).sized(2.0F, 1.4F).build((new ResourceLocation("illageandspillage", "crocofang")).toString()));
    public static final RegistryObject<EntityType<CameraShakeEntity>> CameraShake = ENTITY_TYPES.register("camera_shake", () -> Builder.<CameraShakeEntity>of(CameraShakeEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(20).build((new ResourceLocation("illageandspillage", "camera_shake")).toString()));
    //    public static final RegistryObject<EntityType<DevastatorEntity>> Devastator = ENTITY_TYPES.register("devastator", Builder.of(DevastatorEntity::new, MobCategory.MONSTER).sized(5.4F, 8.75F).build((new ResourceLocation("illageandspillage", "devastator")).toString()););
    public static final RegistryObject<EntityType<AbsorberEntity>> Absorber = ENTITY_TYPES.register("absorber", () -> Builder.of(AbsorberEntity::new, MobCategory.MONSTER).sized(1.3F, 2.9F).build((new ResourceLocation("illageandspillage", "absorber")).toString()));
    public static final RegistryObject<EntityType<PreserverEntity>> Preserver = ENTITY_TYPES.register("preserver", () -> Builder.of(PreserverEntity::new, MobCategory.MONSTER).sized(1.1F, 1.95F).build((new ResourceLocation("illageandspillage", "preserver")).toString()));
    public static final RegistryObject<EntityType<FreakagerEntity>> Freakager = ENTITY_TYPES.register("freakager", () -> Builder.of(FreakagerEntity::new, MobCategory.MONSTER).sized(0.6F, 1.95F).build((new ResourceLocation("illageandspillage", "freakager")).toString()));
    public static final RegistryObject<EntityType<RagnoEntity>> Ragno = ENTITY_TYPES.register("ragno", () -> Builder.of(RagnoEntity::new, MobCategory.MONSTER).sized(3.2F, 1.8F).build((new ResourceLocation("illageandspillage", "ragno")).toString()));
    public static final RegistryObject<EntityType<EyesoreEntity>> Eyesore = ENTITY_TYPES.register("eyesore", () -> Builder.of(EyesoreEntity::new, MobCategory.MONSTER).sized(0.8F, 0.8F).build((new ResourceLocation("illageandspillage", "eyesore")).toString()));
    public static final RegistryObject<EntityType<FunnyboneEntity>> Funnybone = ENTITY_TYPES.register("funnybone", () -> Builder.of(FunnyboneEntity::new, MobCategory.MONSTER).sized(0.5F, 1.2F).build((new ResourceLocation("illageandspillage", "funnybone")).toString()));
    public static final RegistryObject<EntityType<BoneEntity>> Bone = ENTITY_TYPES.register("bone", () -> Builder.<BoneEntity>of(BoneEntity::new, MobCategory.MONSTER).sized(0.5F, 0.1F).build((new ResourceLocation("illageandspillage", "bone")).toString()));
    public static final RegistryObject<EntityType<SkullBombEntity>> SkullBomb = ENTITY_TYPES.register("skull_bomb", () -> Builder.of(SkullBombEntity::new, MobCategory.MONSTER).sized(0.5F, 0.5F).build((new ResourceLocation("illageandspillage", "skull_bomb")).toString()));
    public static final RegistryObject<EntityType<OldFreakagerEntity>> OldFreakager = ENTITY_TYPES.register("old_freakager", () -> Builder.of(OldFreakagerEntity::new, MobCategory.MONSTER).sized(0.6F, 2.3F).build((new ResourceLocation("illageandspillage", "old_freakager")).toString()));
    public static final RegistryObject<EntityType<OldRagnoEntity>> OldRagno = ENTITY_TYPES.register("old_ragno", () -> Builder.of(OldRagnoEntity::new, MobCategory.MONSTER).sized(3.2F, 1.8F).build((new ResourceLocation("illageandspillage", "old_ragno")).toString()));
    public static final RegistryObject<EntityType<OldMagispellerEntity>> OldMagispeller = ENTITY_TYPES.register("old_magispeller", () -> Builder.of(OldMagispellerEntity::new, MobCategory.MONSTER).sized(0.6F, 2.3F).build((new ResourceLocation("illageandspillage", "old_magispeller")).toString()));
    public static final RegistryObject<EntityType<MagiFireballEntity>> MagiFireball = ENTITY_TYPES.register("magi_fireball", () -> Builder.<MagiFireballEntity>of(MagiFireballEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(1).build((new ResourceLocation("illageandspillage", "magi_fireball")).toString()));
    public static final RegistryObject<EntityType<MagiArrowEntity>> MagiArrow = ENTITY_TYPES.register("magi_arrow", () -> Builder.<MagiArrowEntity>of(MagiArrowEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(1).build((new ResourceLocation("illageandspillage", "magi_arrow")).toString()));
    public static final RegistryObject<EntityType<MagiHealEntity>> MagiHeal = ENTITY_TYPES.register("magi_heal", () -> Builder.of(MagiHealEntity::new, MobCategory.MONSTER).sized(0.5F, 0.5F).build((new ResourceLocation("illageandspillage", "magi_heal")).toString()));
    public static final RegistryObject<EntityType<KaboomerEntity>> Kaboomer = ENTITY_TYPES.register("kaboomer", () -> Builder.of(KaboomerEntity::new, MobCategory.MONSTER).sized(1.25F, 3.4F).fireImmune().build((new ResourceLocation("illageandspillage", "kaboomer")).toString()));
    public static final RegistryObject<EntityType<PumpkinBombEntity>> PumpkinBomb = ENTITY_TYPES.register("pumpkin_bomb", () -> Builder.of(PumpkinBombEntity::new, MobCategory.MONSTER).sized(0.75F, 0.75F).build((new ResourceLocation("illageandspillage", "pumpkin_bomb")).toString()));
    public static final RegistryObject<EntityType<AxeEntity>> Axe = ENTITY_TYPES.register("axe", () -> Builder.<AxeEntity>of(AxeEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "axe")).toString()));
    public static final RegistryObject<EntityType<OldAxeEntity>> OldAxe = ENTITY_TYPES.register("old_axe", () -> Builder.of(OldAxeEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "old_axe")).toString()));
    public static final RegistryObject<EntityType<DarkPotionEntity>> DarkPotion = ENTITY_TYPES.register("dark_potion", () -> Builder.of(DarkPotionEntity::new, MobCategory.MISC).sized(0.5F, 0.5F).clientTrackingRange(4).updateInterval(1).build((new ResourceLocation("illageandspillage", "dark_potion")).toString()));
    public static final RegistryObject<EntityType<ScytheEntity>> Scythe = ENTITY_TYPES.register("scythe", () -> Builder.of(ScytheEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "scythe")).toString()));
    public static final RegistryObject<EntityType<OldScytheEntity>> OldScythe = ENTITY_TYPES.register("old_scythe", () -> Builder.of(OldScytheEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "old_scythe")).toString()));
    public static final RegistryObject<EntityType<TrickOrTreatEntity>> TrickOrTreat = ENTITY_TYPES.register("trick_or_treat", () -> Builder.of(TrickOrTreatEntity::new, MobCategory.MONSTER).sized(1.0F, 1.8F).build((new ResourceLocation("illageandspillage", "trick_or_treat")).toString()));
    public static final RegistryObject<EntityType<WebEntity>> Web = ENTITY_TYPES.register("web", () -> Builder.of(WebEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "web")).toString()));
    public static final RegistryObject<EntityType<WebNetEntity>> WebNet = ENTITY_TYPES.register("web_net", () -> Builder.of(WebNetEntity::new, MobCategory.MONSTER).sized(0.2F, 0.2F).build((new ResourceLocation("illageandspillage", "web_net")).toString()));
    public static final RegistryObject<EntityType<VillagerSoulEntity>> VillagerSoul = ENTITY_TYPES.register("villager_soul", () -> Builder.of(VillagerSoulEntity::new, MobCategory.MONSTER).sized(1.0F, 1.0F).fireImmune().build((new ResourceLocation("illageandspillage", "villager_soul")).toString()));

    public static void onAttribute(EntityAttributeCreationEvent event) {
        event.put(Igniter.get(), IgniterEntity.createAttributes().build());
        event.put(Engineer.get(), EngineerEntity.createAttributes().build());
        event.put(ChagrinSentry.get(), ChagrinSentryEntity.createAttributes().build());
        event.put(Hinder.get(), HinderEntity.createAttributes().build());
        event.put(Factory.get(), FactoryEntity.createAttributes().build());
        event.put(Beeper.get(), BeeperEntity.createAttributes().build());
        event.put(Sniper.get(), SniperEntity.createAttributes().build());
        event.put(Poker.get(), PokerEntity.createAttributes().build());
        event.put(Magispeller.get(), MagispellerEntity.createAttributes().build());
        event.put(Faker.get(), FakeMagispellerEntity.createAttributes().build());
        event.put(Dispenser.get(), DispenserEntity.createAttributes().build());
        event.put(Illashooter.get(), IllashooterEntity.createAttributes().build());
        event.put(Crashager.get(), CrashagerEntity.createAttributes().build());
        event.put(BossRandomizer.get(), BossRandomizerEntity.createAttributes().build());
        event.put(Twittollager.get(), TwittollagerEntity.createAttributes().build());
        event.put(Spiritcaller.get(), SpiritcallerEntity.createAttributes().build());
        event.put(MobSpirit.get(), MobSpiritEntity.createAttributes().build());
        event.put(IllagerSoul.get(), IllagerSoulEntity.createAttributes().build());
        event.put(Imp.get(), ImpEntity.createAttributes().build());
        event.put(SpiritHand.get(), SpiritHandEntity.createAttributes().build());
        event.put(Crocofang.get(), CrocofangEntity.createAttributes().build());
//        event.put(Devastator.get(), DevastatorEntity.createAttributes().build());
        event.put(Absorber.get(), AbsorberEntity.createAttributes().build());
        event.put(Preserver.get(), PreserverEntity.createAttributes().build());
        event.put(Freakager.get(), FreakagerEntity.createAttributes().build());
        event.put(Ragno.get(), RagnoEntity.createAttributes().build());
        event.put(Eyesore.get(), EyesoreEntity.createAttributes().build());
        event.put(Funnybone.get(), FunnyboneEntity.createAttributes().build());
        event.put(SkullBomb.get(), SkullBombEntity.createAttributes().build());
        event.put(OldFreakager.get(), OldFreakagerEntity.createAttributes().build());
        event.put(OldRagno.get(), OldRagnoEntity.createAttributes().build());
        event.put(OldMagispeller.get(), OldMagispellerEntity.createAttributes().build());
        event.put(MagiHeal.get(), MagiHealEntity.createAttributes().build());
        event.put(Kaboomer.get(), KaboomerEntity.createAttributes().build());
        event.put(PumpkinBomb.get(), PumpkinBombEntity.createAttributes().build());
        event.put(OldAxe.get(), OldAxeEntity.createAttributes().build());
        event.put(Scythe.get(), ScytheEntity.createAttributes().build());
        event.put(OldScythe.get(), OldScytheEntity.createAttributes().build());
        event.put(TrickOrTreat.get(), TrickOrTreatEntity.createAttributes().build());
        event.put(Web.get(), WebEntity.createAttributes().build());
        event.put(WebNet.get(), WebNetEntity.createAttributes().build());
        event.put(VillagerSoul.get(), VillagerSoulEntity.createAttributes().build());
    }
}
